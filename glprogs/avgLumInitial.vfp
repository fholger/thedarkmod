######################################################
######################################################

!!ARBvp1.0 OPTION ARB_position_invariant;

# basic texcoord
MOV 	result.texcoord[0], vertex.texcoord[0];

#input vertex parameter 0: reciprocal of ( texture width * 3 )
MOV 	result.texcoord[1], program.local[0];


END;

######################################################
######################################################

!!ARBfp1.0 
OPTION ARB_precision_hint_fastest;

#------------------------------------------
# offsets for sample points
#------------------------------------------
PARAM	offset1 = { -1.0,	-1.0 };
PARAM	offset2 = {  0.0,	-1.0 };
PARAM	offset3 = {  1.0,	-1.0 };

PARAM	offset4 = { -1.0,	0.0 };
PARAM	offset5 = {  1.0,	0.0 };

PARAM	offset6 = { -1.0,	1.0 };
PARAM	offset7 = {  0.0,	1.0 };
PARAM	offset8 = {  1.0,	1.0 };
#------------------------------------------
PARAM lum_vec = { 0.2125, 0.7154, 0.0721 };
PARAM lum_black = { 0.0001 };
#------------------------------------------

TEMP	color0, color1, color2, color3, color4, color5, color6, color7, color8;
TEMP	TC, R1;


MOV		TC, fragment.texcoord[1];

MOV color0, fragment.texcoord[0];
MAD	color1, offset1, TC, color0; 
MAD	color2, offset2, TC, color0; 
MAD	color3, offset3, TC, color0; 
MAD	color4, offset4, TC, color0; 
MAD	color5, offset5, TC, color0; 
MAD	color6, offset6, TC, color0; 
MAD	color7, offset7, TC, color0; 
MAD	color8, offset8, TC, color0; 

TEX color0, color0, texture[0], 2D;
TEX color1, color1, texture[0], 2D;
TEX color2, color2, texture[0], 2D;
TEX color3, color3, texture[0], 2D;
TEX color4, color4, texture[0], 2D;
TEX color5, color5, texture[0], 2D;
TEX color6, color6, texture[0], 2D;
TEX color7, color7, texture[0], 2D;
TEX color8, color8, texture[0], 2D;

DP3_SAT	color0, color0, lum_vec; 
#MAX	color0, color0, lum_black; 
DP3_SAT	color1, color1, lum_vec; 
#MAX	color1, color1, lum_black; 
DP3_SAT	color2, color2, lum_vec; 
#MAX	color2, color2, lum_black; 
DP3_SAT	color3, color3, lum_vec; 
#MAX	color3, color3, lum_black; 
DP3_SAT	color4, color4, lum_vec; 
#MAX	color4, color4, lum_black; 
DP3_SAT	color5, color5, lum_vec; 
#MAX	color5, color5, lum_black; 
DP3_SAT	color6, color6, lum_vec; 
#MAX	color6, color6, lum_black; 
DP3_SAT	color7, color7, lum_vec; 
#MAX	color7, color7, lum_black; 
DP3_SAT	color8, color8, lum_vec; 
#MAX	color8, color8, lum_black; 


ADD	color0, color0, color1; 
ADD	color0, color0, color2; 
ADD	color0, color0, color3; 
ADD	color0, color0, color4; 
ADD	color0, color0, color5; 
ADD	color0, color0, color6; 
ADD	color0, color0, color7; 
ADD	color0, color0, color8; 


MUL color0, color0, 0.11111111;

#------------------------------
# Encode 24 bit float into three 8 bit integer values
#------------------------------
MUL color0.x, color0.x, 256.0;
FLR color2.x, color0.x;
MUL color1.x, color2.x, 0.003921568627451;
SUB color0.x, color0.x, color2.x;
MUL color0.x, color0.x, 256.0;
FLR color2.x, color0.x;
MUL color1.y, color2.x, 0.003921568627451;
#-------------------------------
MOV result.color, color1;
#MOV result.color, color0;

END;