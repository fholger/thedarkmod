######################################################
######################################################

!!ARBvp1.0 OPTION ARB_position_invariant;
#---------------------------------------------------------
#	drawVignette.vfp
#	Author:		JC Denton
#	Draws a vignette.
#---------------------------------------------------------

PARAM texCoordFix = { 1.0, 1, 0.0, 0.0 };

# basic texcoord
MUL 	result.texcoord[0], vertex.texcoord[0], texCoordFix;
#MOV 	result.texcoord[0], vertex.texcoord[0];

#Store Parameters sent to this shader to Result.
MOV 	result.texcoord[1], program.local[0];

END;

######################################################
######################################################

!!ARBfp1.0 
OPTION ARB_precision_hint_fastest;

#------------------------------------------
# Parameters resp. vignette power, vignette exposure.
PARAM vignetteParams = { 5, 4 }; 

TEMP	 TC, R1;
TEMP	 vignetteBias, color, rcpShiftScale;

#PARAM	centerCoord		= { -0.498046875, -0.498046875, 0.0, 0.0 };
PARAM	centerCoord		= { -0.5, -0.5, 0.0, 0.0 };
PARAM	scaleOne2D		= { 1.0, 1.0, 0.0, 0.0 };

MOV		TC, fragment.texcoord[0];

#------------------------------------------
#	Read Vignette Bias.
#------------------------------------------
MOV		rcpShiftScale,	0;
MOV		vignetteBias,		fragment.texcoord[1].x;
MOV		rcpShiftScale.x,	fragment.texcoord[1].y;
MOV		rcpShiftScale.y,	fragment.texcoord[1].z;

#------------------------------------------
#	Read cooked data in all previous passes.
#------------------------------------------
TEX		color, TC, texture[0], 2D;

MUL	TC, TC, rcpShiftScale;
#---------------------------------------------------------
#	vignette effect with bias 
#---------------------------------------------------------
MAD		TC, TC, scaleOne2D, centerCoord;		# Convert from 0 - 1 range to -0.5 - 0.5 range 
DP3_SAT	R1.x, TC, TC;
SUB		R1.x, 1, R1.x;
POW		R1.x, R1.x, vignetteParams.x;
MUL_SAT	R1.x, R1.x, vignetteParams.y;

MUL		R1.y, R1.x, R1.x;
MUL		R1.y, R1.x, -3.0;
POW_SAT	R1.y, 2.718282.x, R1.y;
SUB		R1.y, 1, R1.y;
LRP		R1.x, 0.5, R1.x, R1.y;

MOV		color.w, 1;		

LRP		color.z, vignetteBias.x, R1.x, 1.0;

#ADD		R1, TC.y, 0;
#MUL		color.z, R1.x, 1;
#---------------------------------------------------------

MOV		result.color,  color;

END;